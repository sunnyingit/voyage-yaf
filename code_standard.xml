<?xml version="1.0"?>
<ruleset name="Eleme">
 <description>The Eleme coding standard TEST.</description>
 <arg name="tab-width" value="4"/>

<!-- PSR1规则 -->
 <rule ref="PSR1.Files.SideEffects"/>
 <rule ref="PSR1.Methods.CamelCapsMethodName"/>
 <rule ref="Generic.Files.ByteOrderMark"/>
 <rule ref="Squiz.Classes.ValidClassName"/>
 <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

<!-- PSR2规则 -->
 <rule ref="PSR2.Classes.ClassDeclaration"/>
 <rule ref="PSR2.Classes.PropertyDeclaration"/>

 <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
 <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
 <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
 
 <rule ref="PSR2.Files.ClosingTag"/>
 <rule ref="PSR2.Files.EndFileNewline"/>


 <rule ref="PSR2.Methods.FunctionCallSignature"/>
 <rule ref="PSR2.Methods.MethodDeclaration"/>


 <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
 <rule ref="PSR2.Namespaces.UseDeclaration"/>

 <rule ref="Generic.Files.LineEndings">
  <properties>
   <property name="eolChar" value="\n"/>
  </properties>
 </rule>
 <rule ref="Generic.Files.LineLength">
  <properties>
   <property name="lineLimit" value="120"/>
   <property name="absoluteLineLimit" value="0"/>
  </properties>
 </rule>

 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
  <properties>
   <property name="ignoreBlankLines" value="true"/>
  </properties>
 </rule>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
  <severity>0</severity>
 </rule>

 <rule ref="Generic.Formatting.DisallowMultipleStatements"/>

 <rule ref="Generic.WhiteSpace.ScopeIndent">
  <properties>
   <property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
  </properties>
 </rule>
 <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

 <rule ref="Generic.PHP.LowerCaseKeyword"/>

 <rule ref="Generic.PHP.LowerCaseConstant"/>

 <rule ref="Squiz.Scope.MethodScope"/>
 <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

 <rule ref="Squiz.Functions.FunctionDeclaration"/>
 <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>


 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
  <properties>
   <property name="equalsSpacing" value="1"/>
  </properties>
 </rule>
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
  <severity>0</severity>
 </rule>

 <rule ref="PEAR.Functions.ValidDefaultValue"/>

 <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>

 <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
 <rule ref="PSR2.Methods.FunctionCallSignature.SpaceAfterCloseBracket">
  <severity>0</severity>
 </rule>

 <rule ref="Squiz.ControlStructures.ControlSignature"/>
 <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
 <rule ref="Generic.ControlStructures.InlineControlStructure"/>

</ruleset>